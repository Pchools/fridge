{"version":3,"sources":["components/home.js","components/item.js","components/register.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","axios","post","item_name","state","calorie_count","calories","expiry_date","quantity","owner","then","res","console","log","data","setState","handleChange","defineProperty","target","id","value","length","react_default","a","createElement","index_esm","split","minSize","defaultSize","style","h4Style","onSubmit","FormGroup","controlId","bssize","FormLabel","FormControl","autoFocus","type","placeholder","onChange","min","Button","block","disabled","validate","Component","background","color","textAlign","padding","bottomMargin","Item","className","Register","username","email","password","redirect","confirm","react_router","to","Login","passwd","Form","App","react_router_dom","headerStyle","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.811c23b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport SplitPane from 'react-split-pane';\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t      item_name: '',\n\t      calories: '',\n\t      quantity: '',\n\t      expiry_date: '',\n\t      owner: ''\n\t    };\n  \t}\n\n\tvalidate() {\n\t\treturn this.state.item_name.length > 0 && this.state.owner.length > 0;\n\t} \n\n\thandleSubmit = (event) => {\n\t    event.preventDefault();\n\t    axios.post('http://localhost:4000/items/add', {\n\t      item_name: this.state.item_name,\n\t      calorie_count: this.state.calories,\n\t      expiry_date: this.state.expiry_date,\n\t      quantity: this.state.quantity,\n\t      owner: this.state.owner\n\t    })\n\t    .then(res => console.log(res.data));\n\n\t    this.setState({\n\t        item_name: '',\n\t      \tcalories: '',\n\t      \tquantity: '',\n\t      \texpiry_date: '',\n\t      \towner: ''\n\t    });\n\t}\n\n\thandleChange = (event) => {\n\t    this.setState({\n\t      [event.target.id]: event.target.value\n\t    });\n\t}\n\n\n  \trender() {\n    \treturn (\n\t    \t<div>\n\t        \t<SplitPane split=\"vertical\" minSize={50} defaultSize={650}>\n\t        \t    <div>\n\t        \t    \t<h4 style={h4Style}>Items</h4>\n\t        \t    </div>\n     \t\t\t\t<div>\n     \t\t\t\t\t<h4 style={h4Style}>Add/Edit Item</h4>\n     \t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t          \t<FormGroup controlId=\"item_name\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Item Name*</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t            \t\tautoFocus\n\t\t\t\t\t\t            type=\"string\"\n\t\t\t\t\t\t            placeholder=\"item name\"\n\t\t\t\t\t\t            onChange={this.handleChange}\n\t\t\t\t\t\t            value={this.state.item_name}\n\t\t\t\t            \t/>\n\t\t\t\t          \t</FormGroup>\n\t\t\t\t          \t<FormGroup controlId=\"quantity\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Quantity</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t\t            \ttype=\"number\"\n\t\t\t\t\t              \tplaceholder=\"quantity\"\n\t\t\t\t\t              \tonChange={this.handleChange}\n\t\t\t\t\t              \tvalue={this.state.quantity}\n\t\t\t\t\t              \tmin='0'\n\t\t\t\t            \t/>\n\t\t\t\t          \t</FormGroup>\n\t\t\t\t          \t<FormGroup controlId=\"calories\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Calorie Count</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t            \ttype=\"number\"\n\t\t\t\t\t          \t\tplaceholder=\"calorie count\"\n\t\t\t\t\t            \tonChange={this.handleChange}\n\t\t\t\t\t            \tvalue={this.state.calories}\n\t\t\t\t\t         \t\tmin='0'\n\t\t\t\t            \t/>\n\t\t\t\t          \t</FormGroup>\n\t\t\t\t        \t<FormGroup controlId=\"expiry_date\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Expiry Date</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t\t            \ttype=\"date\"\n\t\t\t\t\t            \tonChange={this.handleChange}\n\t\t\t\t\t            \tvalue={this.state.expiry_date}\n\t\t\t\t            \t/>\n\t\t\t\t        \t</FormGroup>\n\t\t\t\t        \t<FormGroup controlId=\"owner\" bssize=\"large\">\n\t\t\t\t            \t<FormLabel>Owner*</FormLabel>\n\t\t\t\t            \t<FormControl\n\t\t\t\t            \t\tplaceholder=\"owner\"\n\t\t\t\t            \t\ttype=\"string\"\n\t\t\t\t            \t\tonChange={this.handleChange}\n\t\t\t\t            \t\tvalue={this.state.owner}\n\t\t\t\t            \t/>\n\t\t\t\t         \t</FormGroup>\n\t\t\t\t          \t<Button block type=\"submit\" bssize=\"large\" disabled={!this.validate()}>\n\t\t\t\t            \tAdd Item\n\t\t\t\t          \t</Button>\n\t\t\t\t        </form>\n     \t\t\t\t</div>\n \t\t\t\t</SplitPane>\n\t    \t</div>\n    \t);\n    }\n}\n\nconst h4Style = {\n  background: '#ccccff',\n  color: '#ffffff',\n  textAlign: 'center',\n  padding: '0px',\n  bottomMargin: '5px'\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass Item extends Component {\n  render() {\n    return (\n      <div className=\"Item\">\n        Item\n        <p>This is the item (user)</p>\n      </div>\n    );\n  }\n}\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\nimport \"./styling/register.css\";\nimport axios from 'axios';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirm: \"\",\n      redirect: false\n    };\n  }\n\n  validate() {\n    return this.state.password.length > 0 && this.state.email.length > 0 && this.state.password === this.state.confirm;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios.post('http://localhost:4000/register', {\n      username: this.state.email,\n      password: this.state.password\n    })\n    .then(() => this.setState({ redirect: true }));\n\n    this.setState({\n        email: '',\n        password: '',\n        confirm: ''\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\nrender() {\n  const { redirect } = this.state;\n  if (redirect){\n    return <Redirect to='/login'/>;\n  }\n  else {\n    return (\n      <div className=\"register\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\" bssize=\"large\">\n            <FormLabel>Email address</FormLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bssize=\"large\">\n            <FormLabel>Create Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm\" bssize=\"large\">\n            <FormLabel>Confirm Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.confirm}\n            />\n          </FormGroup>\n          <Button block type=\"submit\" bssize=\"large\" disabled={!this.validate()}>\n            Register\n          </Button>\n        </form>\n      </div>\n    );\n  }\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport { Form, Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport \"./styling/login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      passwd: \"\"\n    };\n  }\n\n  validate() {\n    return this.state.email.length > 0 && this.state.passwd.length > 0;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"login\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\">\n            <FormLabel>Email address</FormLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n              />\n          </FormGroup>\n          <FormGroup controlId=\"passwd\">\n            <FormLabel>Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.passwd}\n              />\n          </FormGroup>\n          <Button block type=\"submit\" disabled={!this.validate()}>\n            Login\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Item from \"./components/item\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <h1 style={headerStyle}>\n            Fridge\n          </h1>\n            <Switch>\n              <Route path=\"/login\" component={Login}/>\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/items/:id\" component={Item} />\n              <Route path=\"*\" component={Home} />\n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst headerStyle = {\n  background: '#ccccff',\n  color: '#ffffff',\n  textAlign: 'center',\n  padding: '05px',\n  bottomMargin: '5px'\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}