{"version":3,"sources":["components/authService.js","components/withAuth.js","components/home.js","components/register.js","components/item.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","domain","Object","classCallCheck","this","fetch","bind","login","getProfile","username","password","_this","concat","method","body","JSON","stringify","then","res","console","log","token","setToken","Promise","resolve","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","Content-Type","loggedIn","objectSpread","_checkStatus","response","json","status","error","Error","statusText","withAuth","AuthComponent","Auth","_Component","AuthWrapped","possibleConstructorReturn","getPrototypeOf","call","state","user","inherits","createClass","key","value","profile","setState","logout","props","history","replace","react_default","a","createElement","Component","auth","Home","handleSubmitAdd","event","preventDefault","axios","post","item_name","calorie_count","calories","expiry_date","quantity","owner","data","handleSubmitRemove","handleChange","defineProperty","target","id","length","toString","_this2","get","_this3","requestedItemName","find","element","substr","_this4","updateItems","index_esm","split","minSize","defaultSize","style","h4Style","map","item","href","onClick","autoFill","listStyle","formStyle","onSubmit","FormGroup","controlId","bssize","FormLabel","FormControl","autoFocus","type","placeholder","onChange","min","Button","block","name","disabled","validate","background","color","textAlign","padding","bottomMargin","Register","className","handleSubmit","email","redirect","confirm","react_router","to","Login","passwd","catch","alert","assertThisInitialized","handleFormSubmit","Form","App","react_router_dom","classStyle","headerStyle","path","component","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19c0d706.chunk.js","sourcesContent":["import decode from 'jwt-decode';\r\nexport default class AuthService {\r\n    // Initializing important variables\r\n    constructor(domain) {\r\n        this.domain = domain || 'http://localhost:4000' // API server domain\r\n        this.fetch = this.fetch.bind(this) // React binding stuff\r\n        this.login = this.login.bind(this)\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n\r\n    login(username, password) {\r\n        // Get a token from api server using the fetch api\r\n        return this.fetch(`${this.domain}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password\r\n            })\r\n            //console.log(username);\r\n            //console.log(password);\r\n        }).then(res => {\r\n            console.log(res.token);\r\n            this.setToken(res.token) // Setting the token in localStorage\r\n            return Promise.resolve(res);\r\n        })\r\n    }\r\n\r\n    loggedIn() {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken() // GEtting token from localstorage\r\n        return !!token && !this.isTokenExpired(token) // handwaiving here\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setToken(idToken) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    logout() {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n    }\r\n\r\n    getProfile() {\r\n        // Using jwt-decode npm package to decode the token\r\n        return decode(this.getToken());\r\n    }\r\n\r\n\r\n    fetch(url, options) {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport AuthService from './authService';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport default function withAuth(AuthComponent) {\r\n    // Code here now\r\n    const Auth = new AuthService('http://localhost:4000');\r\n    return class AuthWrapped extends Component {\r\n\t    constructor() {\r\n\t\t    super();\r\n\t\t    this.state = {\r\n\t\t        user: null\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\tcomponentWillMount() {\r\n\t\t    if (!Auth.loggedIn()) {\r\n\t\t        this.props.history.replace('/login')\r\n\t\t        //return <Redirect to='/login'/>;\r\n\t\t    }\r\n\t\t    else {\r\n\t\t        try {\r\n\t\t            const profile = Auth.getProfile()\r\n\t\t            this.setState({\r\n\t\t                user: profile\r\n\t\t            })\r\n\t\t    \t}\r\n\t\t        catch(err){\r\n\t\t            Auth.logout()\r\n\t\t            this.props.history.replace('/login')\r\n\t\t        }\r\n    \t\t}\r\n\t\t}\r\n\r\n\t\trender() {\r\n    if (this.state.user) {\r\n        return (\r\n            <AuthComponent history={this.props.history} user={this.state.user} />\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n    }\r\n}\r\n}","import React, { Component } from 'react';\r\nimport SplitPane from 'react-split-pane';\r\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport withAuth from './withAuth';\r\nimport auth from './authService';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Auth = new auth();\r\n\r\nclass Home extends Component {\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t      item_name: '',\r\n\t      calories: '',\r\n\t      quantity: '',\r\n\t      expiry_date: '',\r\n\t      owner: '',\r\n\t      data: []\r\n\t    };\r\n  \t}\r\n\r\n\tvalidate() {\r\n\t\treturn this.state.item_name.length > 0 && this.state.quantity.toString().length > 0 && this.state.calories.toString().length > 0 && this.state.expiry_date.toString().length > 0 && this.state.owner.length > 0;\r\n\t} \r\n\r\n\thandleSubmitAdd = (event) => {\r\n\t    event.preventDefault();\r\n\t    axios.post('http://localhost:4000/items/add', {\r\n\t      item_name: this.state.item_name,\r\n\t      calorie_count: this.state.calories,\r\n\t      expiry_date: this.state.expiry_date,\r\n\t      quantity: this.state.quantity,\r\n\t      owner: this.state.owner\r\n\t    })\r\n\t    .then(res => console.log(res.data));\r\n\r\n\t    this.setState({\r\n\t        item_name: '',\r\n\t      \tcalories: '',\r\n\t      \tquantity: '',\r\n\t      \texpiry_date: '',\r\n\t      \towner: ''\r\n\t    });\r\n\t}\r\n\r\n\thandleSubmitRemove = (event) => {\r\n\t    event.preventDefault();\r\n\t    axios.post('http://localhost:4000/items/remove', {\r\n\t      item_name: this.state.item_name,\r\n\t      calorie_count: this.state.calories,\r\n\t      expiry_date: this.state.expiry_date,\r\n\t      quantity: this.state.quantity,\r\n\t      owner: this.state.owner\r\n\t    })\r\n\t    .then(res => console.log(res.data));\r\n\r\n\t    this.setState({\r\n\t        item_name: '',\r\n\t      \tcalories: '',\r\n\t      \tquantity: '',\r\n\t      \texpiry_date: '',\r\n\t      \towner: ''\r\n\t    });\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t    this.setState({\r\n\t      [event.target.id]: event.target.value\r\n\t    });\r\n\t}\r\n\r\n\tupdateItems(){\r\n\t\taxios.get('http://localhost:4000/items')\r\n\t\t.then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tthis.setState({\r\n\t\t\t\tdata: data\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tautoFill(item_name) {\r\n\t\taxios.get('http://localhost:4000/items')\r\n\t\t.then(res => {\r\n\t\t\tvar requestedItemName = item_name;\r\n\t\t\tvar data = res.data.find(function(element) {\r\n  \t\t\t\treturn element.item_name === requestedItemName;\r\n\t\t\t});\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\titem_name: data.item_name,\r\n\t      \t\tcalories: data.calorie_count,\r\n\t      \t\tquantity: data.quantity,\r\n\t      \t\texpiry_date: data.expiry_date.substr(0,10),\r\n\t      \t\towner: data.owner\r\n\t\t\t})\r\n\t\t})\r\n   \t};\r\n\r\n  \trender() {\r\n  \t\tthis.updateItems();\r\n    \treturn (\r\n\t    \t<div>\r\n\t        \t<SplitPane split=\"vertical\" minSize={50} defaultSize={650}>\r\n\t        \t    <div>\r\n\t        \t    \t<h4 style={h4Style}>Items</h4>\r\n\t        \t    \t<ul>{\r\n\t        \t    \t\tthis.state.data.map((item, key) => {\r\n                       \t\t\treturn (\r\n                       \t\t\t\t<a href=\"#\" onClick={this.autoFill.bind(this, item.item_name)} style={listStyle} key={key}>{item.id}\r\n                       \t\t\t\t\t{item.quantity}&nbsp;\r\n                       \t\t\t\t\t{item.item_name}&nbsp;\r\n                       \t\t\t\t\t({item.calorie_count.toString()} calories):&nbsp;\r\n                       \t\t\t\t\texpires on {item.expiry_date ? item.expiry_date.toString().substr(5,2) + \"/\" + item.expiry_date.toString().substr(8,2) + \"/\" + item.expiry_date.toString().substr(0,4): \"mm/dd/yyyy\"}&nbsp;\r\n                       \t\t\t\t\t---&nbsp;{item.owner}\r\n                       \t\t\t\t\t<p></p>\r\n                       \t\t\t\t</a>\r\n                       \t\t\t)\r\n                    \t\t})\r\n\t        \t    \t}</ul>\r\n\t        \t    </div>\r\n     \t\t\t\t<div>\r\n     \t\t\t\t\t<h4 style={h4Style}>Add/Update/Remove Item</h4>\r\n     \t\t\t\t\t<form style={formStyle} onSubmit={this.handleSubmitAdd.bind(this)}>\r\n\t\t\t\t          \t<FormGroup controlId=\"item_name\" bssize=\"large\">\r\n\t\t\t\t            \t<FormLabel>Item Name*</FormLabel>\r\n\t\t\t\t            \t<FormControl\r\n\t\t\t\t            \t\tautoFocus\r\n\t\t\t\t\t\t            type=\"string\"\r\n\t\t\t\t\t\t            placeholder=\"item name\"\r\n\t\t\t\t\t\t            onChange={this.handleChange}\r\n\t\t\t\t\t\t            value={this.state.item_name}\r\n\t\t\t\t            \t/>\r\n\t\t\t\t          \t</FormGroup>\r\n\t\t\t\t          \t<FormGroup controlId=\"quantity\" bssize=\"large\">\r\n\t\t\t\t            \t<FormLabel>Quantity</FormLabel>\r\n\t\t\t\t            \t<FormControl\r\n\t\t\t\t\t            \ttype=\"number\"\r\n\t\t\t\t\t              \tplaceholder=\"quantity\"\r\n\t\t\t\t\t              \tonChange={this.handleChange}\r\n\t\t\t\t\t              \tvalue={this.state.quantity}\r\n\t\t\t\t\t              \tmin='0'\r\n\t\t\t\t            \t/>\r\n\t\t\t\t          \t</FormGroup>\r\n\t\t\t\t          \t<FormGroup controlId=\"calories\" bssize=\"large\">\r\n\t\t\t\t            \t<FormLabel>Calorie Count</FormLabel>\r\n\t\t\t\t            \t<FormControl\r\n\t\t\t\t            \ttype=\"number\"\r\n\t\t\t\t\t          \t\tplaceholder=\"calorie count\"\r\n\t\t\t\t\t            \tonChange={this.handleChange}\r\n\t\t\t\t\t            \tvalue={this.state.calories}\r\n\t\t\t\t\t         \t\tmin='0'\r\n\t\t\t\t            \t/>\r\n\t\t\t\t          \t</FormGroup>\r\n\t\t\t\t        \t<FormGroup controlId=\"expiry_date\" bssize=\"large\">\r\n\t\t\t\t            \t<FormLabel>Expiry Date</FormLabel>\r\n\t\t\t\t            \t<FormControl\r\n\t\t\t\t\t            \ttype=\"date\"\r\n\t\t\t\t\t            \tonChange={this.handleChange}\r\n\t\t\t\t\t            \tvalue={this.state.expiry_date}\r\n\t\t\t\t            \t/>\r\n\t\t\t\t        \t</FormGroup>\r\n\t\t\t\t        \t<FormGroup controlId=\"owner\" bssize=\"large\">\r\n\t\t\t\t            \t<FormLabel>Owner*</FormLabel>\r\n\t\t\t\t            \t<FormControl\r\n\t\t\t\t            \t\tplaceholder=\"owner\"\r\n\t\t\t\t            \t\ttype=\"string\"\r\n\t\t\t\t            \t\tonChange={this.handleChange}\r\n\t\t\t\t            \t\tvalue={this.state.owner}\r\n\t\t\t\t            \t/>\r\n\t\t\t\t         \t</FormGroup>\r\n\t\t\t\t          \t<Button block name=\"additem\" type=\"submit\" bssize=\"large\" disabled={!this.validate()}>\r\n\t\t\t\t            \tAdd/Update Item\r\n\t\t\t\t          \t</Button>\r\n\t\t\t\t          \t<Button block name=\"removeitem\" type=\"submit\" bssize=\"large\" disabled={!this.validate()} onClick={this.handleSubmitRemove.bind(this)}>\r\n\t\t\t\t            \tRemove Item\r\n\t\t\t\t          \t</Button>\r\n\t\t\t\t        </form>\r\n     \t\t\t\t</div>\r\n \t\t\t\t</SplitPane>\r\n\t    \t</div>\r\n    \t);\r\n    }\r\n    }\r\n\r\n\r\nconst h4Style = {\r\n  background: '#007df7',\r\n  color: '#ffffff',\r\n  textAlign: 'center',\r\n  padding: '0px',\r\n  bottomMargin: '10px'\r\n}\r\n\r\nconst listStyle = {\r\n  textAlign: 'left'\r\n}\r\n\r\nconst formStyle = {\r\n\r\n}\r\n\r\nexport default withAuth(Home);\r\n","import React, { Component } from 'react';\r\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./styling/register.css\";\r\nimport axios from 'axios';\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm: \"\",\r\n      redirect: false\r\n    };\r\n  }\r\n\r\n  validate() {\r\n    return this.state.password.length > 0 && this.state.email.length > 0 && this.state.password === this.state.confirm;\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post('http://localhost:4000/register', {\r\n      username: this.state.email,\r\n      password: this.state.password\r\n    })\r\n    .then(() => this.setState({ redirect: true }));\r\n\r\n    this.setState({\r\n        email: '',\r\n        password: '',\r\n        confirm: ''\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\nrender() {\r\n  const { redirect } = this.state;\r\n  if (redirect){\r\n    return <Redirect to='/login'/>;\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"register\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\" bssize=\"large\">\r\n            <FormLabel>Email address</FormLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bssize=\"large\">\r\n            <FormLabel>Create Password</FormLabel>\r\n            <FormControl\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"confirm\" bssize=\"large\">\r\n            <FormLabel>Confirm Password</FormLabel>\r\n            <FormControl\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.confirm}\r\n            />\r\n          </FormGroup>\r\n          <Button block type=\"submit\" bssize=\"large\" disabled={!this.validate()}>\r\n            Register\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\nimport withAuth from './withAuth';\r\nclass Item extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Item\">\r\n        Item\r\n        <p>This is the item (user)</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Item);\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\r\nimport \"./styling/login.css\";\r\nimport AuthService from './authService';\r\nimport axios from 'axios';\r\nimport withAuth from './withAuth';\r\n\r\nconst Auth = new AuthService();\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      passwd: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleFormSubmit = this.handleSubmit.bind(this);\r\n    this.Auth = new AuthService();\r\n  }\r\n\r\n  validate() {\r\n    return this.state.email.length > 0 && this.state.passwd.length > 0;\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    //console.log(this.state.email);\r\n   // console.log(this.state.passwd);\r\n    this.Auth.login(this.state.email,this.state.passwd)\r\n            .then(res =>{\r\n              console.log(\"Yee baby\");\r\n               this.props.history.replace('/item');\r\n            })\r\n            .catch(err =>{\r\n                alert(err);\r\n            })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\">\r\n            <FormLabel>Email address</FormLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n              />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"passwd\">\r\n            <FormLabel>Password</FormLabel>\r\n            <FormControl\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.passwd}\r\n              />\r\n          </FormGroup>\r\n          <Button block type=\"submit\" disabled={!this.validate()}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/home\";\r\nimport Item from \"./components/item\";\r\nimport Register from \"./components/register\";\r\nimport Login from \"./components/login\";\r\nimport AuthService from './components/authService';\r\nimport withAuth from './components/withAuth';\r\nconst Auth = new AuthService();\r\n\r\nclass App extends Component {\r\n\r\n  handleLogout(){\r\n    Auth.logout()\r\n    this.props.history.replace('/login');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div style={classStyle} className=\"App\">\r\n          <h1 style={headerStyle}>\r\n            Fridge\r\n          </h1>\r\n            <Switch>\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/item\" component={Home} />\r\n              <Route path=\"*\" component={Login} />\r\n            </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst headerStyle = {\r\n  background: '#007df7',\r\n  color: '#ffffff',\r\n  textAlign: 'center',\r\n  padding: '5px',\r\n  bottomMargin: '5px'\r\n}\r\n\r\nconst classStyle = {\r\n  fontFamily: \"Helvetica\",\r\n  color: '#007df7'\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}